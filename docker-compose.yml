version: "3.9"

services:
  db:
    image: postgres:15
    restart: always
    env_file:
      - .env
    volumes:
      - db:/var/lib/postgresql/data/
    networks:
      - network

  pgadmin:
    image: dpage/pgadmin4
    restart: always
    env_file:
      - .env
    networks:
      - network
    labels:
      - traefik.enable=true
      - traefik.docker.network=network
      - traefik.http.routers.pgadmin.rule=Host(`pgadmin.${DOMAIN_NAME}`)
      - traefik.http.routers.pgadmin.entrypoints=websecure
      - traefik.http.routers.pgadmin.tls.certresolver=letsencryptresolver

  minio:
    image: minio/minio:latest
    ports:
      - 9000:9000
      - 9001:9001
    volumes:
      - ./minio/data:/data
    command: server --console-address ":9001" --address '0.0.0.0:80'  /data
    env_file: ./minio/.env
    restart: always
    networks:
      - network
    labels:
      - traefik.enable=true
      - traefik.docker.network=network
      - traefik.http.routers.minio.rule=Host(`minio.${DOMAIN_NAME}`) || Host(`minio.${DOMAIN_NAME_2}`) || Host(`minio.${DOMAIN_NAME_3}`)
      - traefik.http.routers.minio.entrypoints=websecure
      - traefik.http.routers.minio.tls.certresolver=letsencryptresolver
      - traefik.http.services.minio.loadbalancer.server.port=80

  traefik:
    image: traefik:v3.0
    container_name: "traefik"
    restart: unless-stopped
    env_file:
      - .env
    ports:
      - 80:80
      - 443:443
    networks:
      - network
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro # allow Traefik to listen to Docker events
      - ./acme.json:/acme.json # stores ACME (HTTPS) certificates
    command:
      - --entrypoints.web.address=:80
      - --entrypoints.web.http.redirections.entryPoint.to=websecure
      - --entrypoints.web.http.redirections.entryPoint.scheme=https
      - --entrypoints.websecure.address=:443
      - --providers.docker=true
      - --providers.docker.exposedByDefault=false # require containers to define `traefik.enable=true` to be exposed
      - --api
      - --certificatesresolvers.letsencryptresolver.acme.email=${EMAIL}
      - --certificatesresolvers.letsencryptresolver.acme.storage=/acme.json
      - --certificatesresolvers.letsencryptresolver.acme.tlschallenge=true
    labels:
      - traefik.enable=true
      - traefik.http.middlewares.admin.basicauth.users=${HTTP_BASIC_USER}:${HTTP_BASIC_PWD}
      - traefik.http.routers.traefik.entrypoints=websecure
      - traefik.http.routers.traefik.rule=Host(`traefik.${DOMAIN_NAME}`)
      - traefik.http.routers.traefik.service=api@internal
      - traefik.http.routers.traefik.middlewares=admin
      - traefik.http.routers.traefik.tls.certresolver=letsencryptresolver

networks:
  network:
    driver: bridge

volumes:
  db:
